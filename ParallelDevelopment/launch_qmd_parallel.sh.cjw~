#!/bin/bash
#PBS -l nodes=2:ppn=3,walltime=00:08:00

let NUM_WORKERS="$PBS_NUM_NODES * $PBS_NUM_PPN"
echo "Num workers: $NUM_WORKERS"
# echo $1

# QMD_ID=$1

echo "QMD ID =$QMD_ID"
host=$(hostname)
echo "host= $host"

if [ "$host" == "IT067176" ]
then
    echo "host= $host"
    running_dir=$(pwd)
    lib_dir="/home/bf16951/Dropbox/QML_share_stateofart/QMD/Libraries/QML_lib"
    script_dir="/home/bf16951/Dropbox/QML_share_stateofart/QMD/ExperimentalSimulations"
    SERVER_HOST='localhost'
    ~/redis-4.0.8/src/redis-server  $lib_dir/RedisConfig.conf & 
        
elif [[ "$host" == "newblue"* ]]
then
    echo "BC frontend identified"
    echo "host= $host"
    running_dir=$(pwd)
    lib_dir="/panfs/panasas01/phys/bf16951/QMD/Libraries/QML_lib"
    script_dir="/panfs/panasas01/phys/bf16951/QMD/ExperimentalSimulations"
    module load tools/redis-4.0.8
    module load mvapich/gcc/64/1.2.0-qlc
    echo "launching redis"
    redis-server $lib_dir/RedisConfig.conf --protected-mode no  &
    SERVER_HOST='localhost'


elif [[ "$host" == "node"* ]]
then
    echo "BC backend identified"
    echo "host= $host"
    running_dir=$(pwd)
    lib_dir="/panfs/panasas01/phys/bf16951/QMD/Libraries/QML_lib"
    script_dir="/panfs/panasas01/phys/bf16951/QMD/ExperimentalSimulations"
    module load tools/redis-4.0.8
    module load languages/intel-compiler-16-u2
    SERVER_HOST=$(head -1 "$PBS_NODEFILE")
    echo "launching redis: $lib_dir/RedisConfig.conf on $SERVER_HOST"
	cd $lib_dir    
	redis-server RedisDatabaseConfig.conf --protected-mode no &
	# redis-server $lib_dir/RedisConfig.conf &
	# redis-server  --protected-mode no & ##This works

else
    echo "Neither local machine (Brian's university laptop) or blue crystal identified." 
fi

set -x
job_id=$PBS_JOBID

job_number="$(cut -d'.' -f1 <<<"$job_id")"
echo "Job id is $job_number"
cd $running_dir
mkdir -p $running_dir/logs
mkdir -p $PBS_O_WORKDIR/logs


# Create the node file ---------------
# 
cat $PBS_NODEFILE
export nodes=`cat $PBS_NODEFILE`
export nnodes=`cat $PBS_NODEFILE | wc -l`
export confile=$PBS_O_WORKDIR/logs/inf.$PBS_JOBID.conf
for i in $nodes; do
 echo ${i} >>$confile
done
# -------------------------------------


# The redis server is started on the first node.
REDIS_URL=redis://$SERVER_HOST:6379
echo "REDIS_URL is $REDIS_URL"
#TODO create a redis config


echo "workers will log in $running_dir/logs"

cd $lib_dir
if [[ "$host" == "node"* ]]
then
	echo "Launching RQ worker on remote nodes using mpirun"
	mpirun -np $NUM_WORKERS -machinefile $confile rq worker -u $REDIS_URL > $PBS_O_WORKDIR/logs/worker_$job_number.log 2>&1 &
#	mpirun -np $NUM_WORKERS rq worker -u $REDIS_URL > $PBS_O_WORKDIR/logs/worker_$job_number.log 2>&1 &
else
	echo "Launching RQ worker locally"
	rq worker -u $REDIS_URL > $running_dir/logs/worker_$HOSTNAME.log 2>&1 &
fi

sleep 5

cd $script_dir
python3 Exp.py -rq=0 -p=20 -e=10 -bt=5 -qid=$QMD_ID -pkl=0 -host=$SERVER_HOST

sleep 1
echo "   SHUTDOWN REDIS   "

# redis-cli flushall
# redis-cli shutdown

